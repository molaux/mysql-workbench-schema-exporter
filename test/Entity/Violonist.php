<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-12-06 16:21:37.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Test\TestBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Test\TestBundle\Entity\Base\Violonist as BaseViolonist;
use Test\TestBundle\Entity\ViolonistRepository;

use Doctrine\Common\Collections\ArrayCollection;

/**
 * Test\TestBundle\Entity\Violonist
 *
 * @ORM\Entity(repositoryClass="ViolonistRepository")
 */
class Violonist extends BaseViolonist
{

  /**
   * @ORM\OneToMany(targetEntity="Test\TestBundle\Entity\Violon", mappedBy="violonist")
   * @ORM\JoinColumn(name="id", referencedColumnName="persons_id", nullable=false)
   */
  protected $violons;

  public function __construct()
  {
    parent::__construct();
    $this->violons = new ArrayCollection();
  }
  
  /**
   * Add Tool entity to collection (one to many).
   *
   * @param \Test\TestBundle\Entity\Base\Violon $tool
   * @return \Test\TestBundle\Entity\Base\Violon
   */
  public function addViolon(Base\Violon $violon)
  {
    $this->violons[] = $violon;

    return $this;
  }
  
  /**
   * Remove Tool entity from collection (one to many).
   *
   * @param \Test\TestBundle\Entity\Base\Violon $tool
   * @return \Test\TestBundle\Entity\Base\Violon
   */
  public function removeViolon(Base\Violon $violon)
  {
    $this->violons->removeElement($violon);

    return $this;
  }

  /**
   * Get Tool entity collection (one to many).
   *
   * @return \Doctrine\Common\Collections\Collection
   */
  public function getViolons()
  {
    return $this->violons;
  }


}