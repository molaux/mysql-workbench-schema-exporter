<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-12-06 16:59:23.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Test\TestBundle\Entity\Base;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Test\TestBundle\Entity\PlaceRepository;

/**
 * Test\TestBundle\Entity\Place
 *
 * @ORM\Entity(repositoryClass="PlaceRepository")
 * @ORM\Table(name="places")
 * @ORM\InheritanceType("SINGLE_TABLE")
 * @ORM\DiscriminatorColumn(name="discr", type="string")
 * @ORM\DiscriminatorMap({"extended":"Test\TestBundle\Entity\Place"})
 */
abstract class Place
{
  /**
   * @ORM\Id
   * @ORM\Column(type="integer")
   * @ORM\GeneratedValue(strategy="IDENTITY")
   */
  protected $id;

  /**
   * @ORM\Column(type="string", length=45, nullable=true)
   */
  protected $name;

  /**
   * @ORM\OneToMany(targetEntity="Test\TestBundle\Entity\Person", mappedBy="place")
   * @ORM\JoinColumn(name="id", referencedColumnName="places_id", nullable=false, onDelete="CASCADE")
   */
  protected $people;

  public function __construct()
  {
    $this->people = new ArrayCollection();
  }

  /**
   * Set the value of id.
   *
   * @param integer $id
   * @return \Test\TestBundle\Entity\Base\Place
   */
  public function setId($id)
  {
    $this->id = $id;

    return $this;
  }

  /**
   * Get the value of id.
   *
   * @return integer
   */
  public function getId()
  {
    return $this->id;
  }

  /**
   * Set the value of name.
   *
   * @param string $name
   * @return \Test\TestBundle\Entity\Base\Place
   */
  public function setName($name)
  {
    $this->name = $name;

    return $this;
  }

  /**
   * Get the value of name.
   *
   * @return string
   */
  public function getName()
  {
    return $this->name;
  }

  /**
   * Add Person entity to collection (one to many).
   *
   * @param \Test\TestBundle\Entity\Base\Person $person
   * @return \Test\TestBundle\Entity\Base\Place
   */
  public function addPerson(Person $person)
  {
    $this->people[] = $person;

    return $this;
  }

  /**
   * Remove Person entity from collection (one to many).
   *
   * @param \Test\TestBundle\Entity\Base\Person $person
   * @return \Test\TestBundle\Entity\Base\Place
   */
  public function removePerson(Person $person)
  {
    $this->people->removeElement($person);

    return $this;
  }

  /**
   * Get Person entity collection (one to many).
   *
   * @return \Doctrine\Common\Collections\Collection
   */
  public function getPeople()
  {
    return $this->people;
  }

  public function __sleep()
  {
    return array('id', 'name');
  }
}